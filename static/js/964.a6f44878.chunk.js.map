{"version":3,"file":"static/js/964.a6f44878.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/MovieList/MovieList.module.css?6db5","components/MovieList/MovieList.jsx","webpack://react-homework-template/./src/pages/Movies/Movies.module.css?82ee","webpack://react-homework-template/./src/components/SearchForm/SearchForm.module.css?d6f1","components/SearchForm/SearchForm.jsx","pages/Movies/Movies.jsx","service/theMovieDbApi.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"MovieList_container__sSMe5\",\"movie-list-item\":\"MovieList_movie-list-item__BPg8B\",\"moviePoster\":\"MovieList_moviePoster__WQ7V4\",\"movie-link\":\"MovieList_movie-link__clOOF\"};","import { Link, useLocation } from 'react-router-dom';\nimport styles from './MovieList.module.css';\n\nconst MovieList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <div className={styles.container}>\n      <ul>\n        {movies.map(({ title, id, poster_path }) => (\n          <li key={id} className={styles['movie-list-item']}>\n            <Link\n              to={`/movies/${id}`}\n              state={{ background: location }}\n              className={styles['movie-link']}\n            >\n              <img\n                src={\n                  poster_path\n                    ? `https://image.tmdb.org/t/p/w185${poster_path}`\n                    : 'https://live.staticflickr.com/65535/51349451747_f6d7898f2c_n.jpg'\n                }\n                alt={title}\n                className={styles.moviePoster}\n              />\n              <div>{title}</div>\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default MovieList;\n","// extracted by mini-css-extract-plugin\nexport default {\"moviesContainer\":\"Movies_moviesContainer__RXtJy\",\"movieList\":\"Movies_movieList__FD6N4\",\"movieItem\":\"Movies_movieItem__U+pt+\",\"moviePoster\":\"Movies_moviePoster__1Y8Zf\",\"movieTitle\":\"Movies_movieTitle__lz38M\",\"movieRating\":\"Movies_movieRating__GuAR6\",\"movieOverview\":\"Movies_movieOverview__VwrNc\",\"movieGenres\":\"Movies_movieGenres__bn6Fh\"};","// extracted by mini-css-extract-plugin\nexport default {\"searchForm\":\"SearchForm_searchForm__NsJpF\",\"searchInput\":\"SearchForm_searchInput__h6REp\",\"searchButton\":\"SearchForm_searchButton__AQHxA\"};","import { useSearchParams } from 'react-router-dom';\nimport styles from './SearchForm.module.css';\n\nconst SearchForm = () => {\n  const [, setSearchParams] = useSearchParams();\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const query = event.target.elements.searchQuery.value.trim();\n    if (!query) return;\n    setSearchParams({ query });\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className={styles.searchForm}>\n      <label htmlFor=\"searchQuery\">\n        <input\n          type=\"text\"\n          name=\"searchQuery\"\n          id=\"searchQuery\"\n          className={styles.searchInput}\n          placeholder=\"Search for movies...\"\n        />\n      </label>\n      <button type=\"submit\" className={styles.searchButton}>\n        Search\n      </button>\n    </form>\n  );\n};\n\nexport default SearchForm;","import { useEffect } from 'react';\nimport { fetchMoviesByQuery } from 'service/theMovieDbApi';\nimport { useState } from 'react';\nimport MovieList from 'components/MovieList/MovieList';\nimport { useSearchParams } from 'react-router-dom';\nimport styles from './Movies.module.css';\nimport SearchForm from 'components/SearchForm/SearchForm';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState(null);\n  const [searchParams] = useSearchParams();\n  const query = searchParams.get('query') || '';\n\n  useEffect(() => {\n    const fetchMoviesByQueryData = async () => {\n      if (!query) return;\n      try {\n        const result = await fetchMoviesByQuery(query);\n        setMovies(result);\n      } catch (error) {\n        console.error('Error fetching movies:', error);\n      }\n    };\n    fetchMoviesByQueryData();\n  }, [query]);\n  return (\n    <div className={styles.moviesÐ¡ontainer}>\n      {}\n      <SearchForm />\n      {movies && <MovieList movies={movies} />}\n    </div>\n  );\n};\nexport default Movies;","import axios from 'axios';\n\nconst successToken =\n  'eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJkNDRkNjQ5YmYyOWIxM2YxNWY3YzA5ZTNhN2M1MDRkZCIsInN1YiI6IjY1ZDM1NDQ3MmRhODQ2MDE4NTI2MzE1MSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.TDx983zsZiX2YGdKyqnHoNB0tBfNTgYu5H9MjFWr_fE';\n\nconst baseUrl = 'https://api.themoviedb.org/3';\n\nexport const fecthTrendingMovies = async () => {\n  const {\n    data: { results },\n  } = await axios(`${baseUrl}/trending/movie/day`, {\n    headers: { Authorization: `Bearer ${successToken}` },\n  });\n  return results;\n};\nexport const fetchMovieDetailsById = async id => {\n  const { data } = await axios(`${baseUrl}/movie/${id}`, {\n    headers: { Authorization: `Bearer ${successToken}` },\n  });\n  return data;\n};\n\nexport const fetchCreditsByMovieId = async id => {\n  const { data } = await axios(`${baseUrl}/movie/${id}/credits`, {\n    headers: { Authorization: `Bearer ${successToken}` },\n  });\n  return data.cast;\n};\nexport const fetchReviewsByMovieId = async id => {\n  const { data } = await axios(`${baseUrl}/movie/${id}/reviews`, {\n    headers: { Authorization: `Bearer ${successToken}` },\n  });\n  return data.results;\n};\nexport const fetchMoviesByQuery = async query => {\n  const { data } = await axios(`${baseUrl}/search/movie?query=${query}`, {\n    headers: { Authorization: `Bearer ${successToken}` },\n  });\n  return data.results;\n};"],"names":["_ref","movies","location","useLocation","_jsx","className","styles","children","map","_ref2","title","id","poster_path","_jsxs","Link","to","concat","state","background","src","alt","_useSearchParams","useSearchParams","setSearchParams","_slicedToArray","onSubmit","event","preventDefault","query","target","elements","searchQuery","value","trim","htmlFor","type","name","placeholder","_useState","useState","_useState2","setMovies","get","useEffect","fetchMoviesByQueryData","_asyncToGenerator","_regeneratorRuntime","_callee","result","_context","prev","next","abrupt","fetchMoviesByQuery","sent","t0","console","error","stop","apply","arguments","SearchForm","MovieList","successToken","baseUrl","fecthTrendingMovies","_yield$axios","results","axios","headers","Authorization","data","fetchMovieDetailsById","_callee2","_yield$axios2","_context2","_x","fetchCreditsByMovieId","_ref3","_callee3","_yield$axios3","_context3","cast","_x2","fetchReviewsByMovieId","_ref4","_callee4","_yield$axios4","_context4","_x3","_ref5","_callee5","_yield$axios5","_context5","_x4"],"sourceRoot":""}